---
import { Icon } from 'astro-icon/components'
import HeaderLink from './HeaderLink.astro'
---

<nav
  class="flex items-center justify-between py-4 border-b border-border bg-background text-foreground"
>
  <a href="/" class="flex items-center gap-2 text-lg font-semibold">
    <div class="relative">
      <Icon name="lucide:hexagon" class="w-10 h-10 text-primary" />
      <Icon name="lucide:terminal" class="w-5 h-5 text-primary absolute inset-0 m-auto" />
    </div>
    Haroon
  </a>
  <div class="hidden sm:flex items-center gap-6 text-sm font-medium">
    <HeaderLink href="/blog">Blogs</HeaderLink>
    <HeaderLink href="#project">Projects</HeaderLink>
    <button
      class="rounded-full p-2 hover:bg-muted transition-colors"
      id="theme-toggle"
      title="Toggle theme"
    >
      <Icon name="lucide:moon" class="w-5 h-5 hidden dark:inline" />
      <Icon name="lucide:sun" class="w-5 h-5 dark:hidden" />
    </button>
  </div>
  <div class="sm:hidden flex items-center gap-2">
    <button
      class="rounded-full p-2 hover:bg-muted transition-colors"
      id="theme-toggle"
      title="Toggle theme"
    >
      <Icon name="lucide:moon" class="w-5 h-5 hidden dark:inline" />
      <Icon name="lucide:sun" class="w-5 h-5 dark:hidden" />
    </button>
    <button
      id="mobile-menu-button"
      class="flex items-center p-2 rounded hover:bg-muted focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary transition-colors"
      aria-label="Toggle navigation"
    >
      <Icon name="lucide:menu" id="hamburger-icon" class="w-6 h-6" />
      <Icon name="lucide:x" id="close-icon" class="w-6 h-6 hidden" />
    </button>
  </div>
</nav>

<div id="mobile-menu" class="hidden sm:hidden bg-background border-b border-border shadow-lg">
  <div class="px-4 py-6 space-y-4">
    <div class="flex flex-col space-y-3">
      <HeaderLink
        href="/blog"
        class="text-base font-medium py-2 px-3 rounded-md hover:bg-muted transition-colors"
      >
        Blogs
      </HeaderLink>
      <HeaderLink
        href="#project"
        class="text-base font-medium py-2 px-3 rounded-md hover:bg-muted transition-colors"
      >
        Projects
      </HeaderLink>
    </div>
  </div>
</div>
<script is:inline>
  const html = document.documentElement
  const stored = localStorage.getItem('theme')
  const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches
  if (stored === 'dark' || (!stored && prefersDark)) {
    html.classList.add('dark')
  }

  function toggleTheme() {
    const isDark = html.classList.toggle('dark')
    localStorage.setItem('theme', isDark ? 'dark' : 'light')
  }

  document.querySelectorAll('[id="theme-toggle"]').forEach((button) => {
    button.addEventListener('click', toggleTheme)
  })
  const mobileMenuButton = document.getElementById('mobile-menu-button')
  const mobileMenu = document.getElementById('mobile-menu')
  const hamburgerIcon = document.getElementById('hamburger-icon')
  const closeIcon = document.getElementById('close-icon')
  mobileMenuButton.addEventListener('click', () => {
    const isOpen = !mobileMenu.classList.contains('hidden')
    if (isOpen) {
      mobileMenu.classList.add('hidden')
      hamburgerIcon.classList.remove('hidden')
      closeIcon.classList.add('hidden')
    } else {
      mobileMenu.classList.remove('hidden')
      hamburgerIcon.classList.add('hidden')
      closeIcon.classList.remove('hidden')
    }
  })

  document.addEventListener('click', (e) => {
    if (!mobileMenuButton.contains(e.target) && !mobileMenu.contains(e.target)) {
      mobileMenu.classList.add('hidden')
      hamburgerIcon.classList.remove('hidden')
      closeIcon.classList.add('hidden')
    }
  })

  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape' && !mobileMenu.classList.contains('hidden')) {
      mobileMenu.classList.add('hidden')
      hamburgerIcon.classList.remove('hidden')
      closeIcon.classList.add('hidden')
    }
  })
</script>
